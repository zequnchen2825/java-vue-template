<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woc.dao.dao.WocPlatformDao">
  <resultMap id="BaseResultMap" type="com.woc.common.entity.WocPlatform">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform_name" jdbcType="VARCHAR" property="platformName" />
    <result column="platform_tag" jdbcType="VARCHAR" property="platformTag" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="subscribe_name" jdbcType="VARCHAR" property="subscribeName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="bucket" jdbcType="VARCHAR" property="bucket" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform_name, platform_tag, `status`, mobile, address, qq, is_delete, latitude, 
    longitude, subscribe_name, email, bucket
  </sql>
  <select id="selectByExample" parameterType="com.woc.common.entity.WocPlatformExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from woc_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from woc_platform
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from woc_platform
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woc.common.entity.WocPlatformExample">
    delete from woc_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.woc.common.entity.WocPlatform" useGeneratedKeys="true">
    insert into woc_platform (platform_name, platform_tag, `status`, 
      mobile, address, qq, 
      is_delete, latitude, longitude, 
      subscribe_name, email, bucket
      )
    values (#{platformName,jdbcType=VARCHAR}, #{platformTag,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{latitude,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, 
      #{subscribeName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{bucket,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.woc.common.entity.WocPlatform" useGeneratedKeys="true">
    insert into woc_platform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="platformName != null">
        platform_name,
      </if>
      <if test="platformTag != null">
        platform_tag,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="subscribeName != null">
        subscribe_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="bucket != null">
        bucket,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="platformName != null">
        #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformTag != null">
        #{platformTag,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="subscribeName != null">
        #{subscribeName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bucket != null">
        #{bucket,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woc.common.entity.WocPlatformExample" resultType="java.lang.Long">
    select count(*) from woc_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update woc_platform
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformName != null">
        platform_name = #{record.platformName,jdbcType=VARCHAR},
      </if>
      <if test="record.platformTag != null">
        platform_tag = #{record.platformTag,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.subscribeName != null">
        subscribe_name = #{record.subscribeName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bucket != null">
        bucket = #{record.bucket,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update woc_platform
    set id = #{record.id,jdbcType=INTEGER},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      platform_tag = #{record.platformTag,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      subscribe_name = #{record.subscribeName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      bucket = #{record.bucket,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woc.common.entity.WocPlatform">
    update woc_platform
    <set>
      <if test="platformName != null">
        platform_name = #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformTag != null">
        platform_tag = #{platformTag,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="subscribeName != null">
        subscribe_name = #{subscribeName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bucket != null">
        bucket = #{bucket,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woc.common.entity.WocPlatform">
    update woc_platform
    set platform_name = #{platformName,jdbcType=VARCHAR},
      platform_tag = #{platformTag,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      subscribe_name = #{subscribeName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      bucket = #{bucket,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>